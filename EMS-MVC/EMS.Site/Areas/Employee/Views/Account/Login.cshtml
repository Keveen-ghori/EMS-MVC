@model EmployeeViewModel
@using EMS.Core.Constants
@using EMS.Site.Areas.Employee.Models;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = null;
    ViewData["Title"] = Resourses.EmpLogin;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login - EMS</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Employee/css/Login.css" asp-append-version="true" />
    <link href="~/toastr.js/toastr.min.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <main role="main" class="pb-3">
            <div class="login-page">
                <div class="form">
                    <form class="login-form needs-validation" method="post" asp-action="@Actions.Login" asp-controller="@Controllors.Account" novalidate>
                        <h2>Sign In</h2>
                        <div class="form-group">
                            <input asp-for="@Model.Employee.Email" class="form-control" value="" required />
                            <label asp-for="@Model.Employee.Email" class="form-label"></label>
                            <span asp-validation-for="@Model.Employee.Email" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <input asp-for="@Model.Employee.LoginPassword" class="form-control" value="" required>
                            <label asp-for="@Model.Employee.LoginPassword" class="form-label"></label>
                            <span asp-validation-for="@Model.Employee.LoginPassword" class="text-danger"></span>
                        </div>
                        <button type="submit">Login</button>
                        <p class="message">Not registered? <a href="@Url.Action(Actions.Register, Controllors.Account)">Create an account</a></p>
                    </form>
                </div>
            </div>
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/Employee/js/BootstrapValidation.js"></script>
    <script src="~/toastr.js/toastr.min.js"></script>


    @if (TempData.ContainsKey(ToastrMessages.EmpRegSuccess))
    {
        <script>
            toastr.options = {
                positionClass: 'toast-top-left'
            };
            toastr.success('@ToastrMessages.EmpRegSuccess');
        </script>
        TempData.Remove(ToastrMessages.EmpRegSuccess);
    }

    @if (TempData.ContainsKey(ToastrMessages.UserNotFound))
    {
        <script>
            toastr.options = {
                positionClass: 'toast-top-left'
            };
            toastr.error('@ToastrMessages.UserNotFound');
        </script>
        TempData.Remove(ToastrMessages.UserNotFound);
    }

    @if (TempData.ContainsKey(ToastrMessages.EmpisLocked))
    {
        <script>
            toastr.options = {
                positionClass: 'toast-top-left'
            };
            toastr.error('@ToastrMessages.EmpisLocked');
        </script>
        TempData.Remove(ToastrMessages.EmpisLocked);
    }

    @if (TempData.ContainsKey(ToastrMessages.EmpRemainingTry))
    {
        <script>
            toastr.options = {
                positionClass: 'toast-top-left'
            };
            toastr.error('@TempData[ToastrMessages.EmpRemainingTry]');
        </script>
        TempData.Remove(ToastrMessages.EmpRemainingTry);
    }


    <partial name="_ValidationScriptsPartial" />
</body>
</html>
